@use "sass:map";
@use "../base/color";
@use "../utilities/derived-variables";
@use "../utilities/functions";
@use "../utilities/initial-variables";
@use "../utilities/mixins";
@use "../utilities/spacing";

$modal-content-width: 640px !default;
$modal-content-margin-mobile: 20px !default;
$modal-close-dimensions: 40px !default;
$modal-dimensions: (
  'xsmall': 40vw,
  'small': 50vw,
  'medium': 60vw,
  'large': 70vw,
  'xlarge': 80vw
);

body:has(.modal.is-active) {
  height: 100%;
  overflow: hidden
}

.modal {
  @include mixins.overlay;

  position: fixed;
  z-index: functions.zindex('modal');
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  visibility: hidden;
  opacity: 0;
  transition: opacity 250ms ease-in-out,
  visibility 0ms linear 250ms;

  // overlay
  &::after {
    @include mixins.overlay;

    content: '';
    background-color: rgba(#000, 0.86);
  }

  &.is-active {
    opacity: 1;
    visibility: inherit;
    transition: opacity 250ms ease-in-out,
    visibility 0ms linear;

    .modal-content {
      transform: translateY(0);
    }
  }

  // gestion des tailles
  @include mixins.tablet {
    justify-content: center;
    @each $dimension in derived-variables.$dimensions-extended {
      &.is-#{$dimension} {
        .modal-content {
          width: map.get($modal-dimensions, $dimension);
        }
      }
    }
  }

  // spécificité pour le bouton en position: relative par défaut
  .button {
    position: static;
  }

  .modal-content {
    background-color: color.getColor('background');
    border-radius: var(--radius) var(--radius) 0 0;
    color: color.getColor('font');
    overflow: auto;
    position: relative;
    margin: 0 $modal-content-margin-mobile;
    max-height: calc(100vh - 40px);
    width: 100%;
    z-index: functions.zindex('tiny');
    transition: transform ease-in-out 250ms;
    transform: translateY(100%);

    @include mixins.tablet {
      max-height: calc(100vh - 120px);
      width: $modal-content-width;
      border-radius: initial-variables.$radius;
    }

    // Annulation des propriétés du composant box, se trouvant dans une modal
    > .box {
      background-color: transparent;
      border-radius: 0;
      box-shadow: none;
      padding: 0;
      max-height: inherit;

      .box-content {
        background-color: transparent;
        border-radius: 0;
        padding: 0;
        padding-bottom: 30px;
        margin: 0;
        text-align: inherit;
      }
    }

    // If Close Icon Modal & Title Modal are sibling elements, override margin
    .modal-close ~ .modal-title {
      margin-top: -32px;
    }

    .modal-header {
      padding: spacing.$spacing-5;
      color: color.getColor('font');
      font-family: initial-variables.$family-sans-serif;
      font-size: initial-variables.$size-3;
      font-weight: initial-variables.$weight-semibold;
      line-height: 1.1;
      background-color: color.getColor('background');
      z-index: functions.zindex('medium');
      position: sticky;
      top: 0;
      width: 100%;
      word-wrap: break-word;
      display: flex;
      flex-direction: row-reverse;
      justify-content: space-between;

      &:has(.icon) {
        text-align: center;
      }

      @include mixins.desktop {
        font-size: initial-variables.$size-3-desktop;
      }

      .modal-close {
        @include mixins.delete;

        background-color: color.getColor('background');
        display: block;
        height: $modal-close-dimensions;
        width: $modal-close-dimensions;
        z-index: functions.zindex('large');

        #{initial-variables.$hoverSelector} {
          background-color: color.getColor('neutral-fade');
        }

        &::after,
        &::before {
          background-color: color.getColor('font');
        }

        &:focus-visible,
        &:focus:focus-visible {
          outline: 2px solid color.getColor('font') !important;
          outline-offset: 2px;
        }
        &:focus{
          background-color: transparent !important;
        }
      }
    }

    .modal-body {
      padding: 0 spacing.$spacing-5 spacing.$spacing-5 ;
    }
    &:has(>.modal-footer) > .modal-body {
      padding-bottom: 0;
    }

    .modal-footer {
      padding: spacing.$spacing-5;
      position: sticky;
      width: 100%;
      background: color.getColor('background');
      bottom: 0;

      @include mixins.tablet {
        display: flex;
        justify-content: flex-end;
      }
    }
  }

  // version "panel" de la modal
  &.is-panel {
    &::after {
      position: fixed;
    }

    .modal-content {
      border-radius: 0;
      position: fixed;
      right: 0;
      top: 0;
      min-height: 100%;
      height: 100%;
      max-height: none;
      margin: 0;
      text-align: left;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      transform: translateX(100%);

      @include mixins.tablet {
        max-width: 375px;
      }

      .modal-footer {
        margin-top: auto;
      }
    }

    &.is-active {
      .modal-content {
        transform: translateX(0);
      }
    }
  }
}
