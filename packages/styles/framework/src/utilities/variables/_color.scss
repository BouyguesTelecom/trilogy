$suffix: '';

/*
 All color variables are defined here
 @string slug name used in classname (You can use your brand name)
 @color A valid css color value
 @invert The slug name of the best inverted color
 @hover A valid css color value (a variant color for the hover case)
 @visited A valid css color value (a variant color for the pressed case) -- optional
 @background A valid css color value (a variant color for background) -- optional
 */
$colors: (
  'background': [#fff, 'white', 'main'],
  'stroke':[ #727272, 'stroke', 'white' ],
  'transparent': ['transparent', 'transparent', 'transparent'],
  'main':[ #3d5d7e, 'main', 'white'],
  'main-fade':[ #eff2f8, 'main-fade', 'white'],
  'accent':[ #da641b,'accent', 'white'],
  'font':[ #3d5d7e, 'font', 'white'],
  'font-fade':[ #5e788aff, 'font-fade', 'white'],
  'font-placeholder':[ #687a87, 'font-placeholder', 'white'],
  'success':[ #007B52, 'success', 'white'],
  'success-fade':[ #cae8ca,'success-fade', 'white'],
  'info':[ #1A688A, 'info', 'white'],
  'info-fade':[ #c8dbec, 'info-fade', 'white'],
  'warning':[ #FFBB33, 'warning', 'white'],
  'warning-fade':[ #ecdbc6, 'warning-fade', 'white'],
  'error':[ #D42D02,'error', 'white'],
  'error-fade':[ #eecccc, 'error-fade', 'white'],
  'disabled':[ #646464, 'disabled', 'white'],
  'disabled-fade':[ #D1D1D1,'disabled-fade', 'white'],
  'neutral':[ #707070, 'grey', 'white' ],
  'neutral-fade':[#F4F4F4, 'grey-fade', 'white' ],
) !default;

$fade-colors: (
  'main': 'main-fade',
  'success': 'success-fade',
  'info':'info-fade',
  'warning':'warning-fade',
  'error':'error-fade',
  'disabled': 'disabled-fade',
  'neutral': 'neutral-fade',
) !default;

@function getColor( $name ) {
   @if global-variable-exists(suffix-theme) {
    @return var(--color-#{nth(map-get($colors, $name), 2)}-#{$suffix-theme});
  } @else {
    @return var(--color-#{nth(map-get($colors,$name),2)});
  }
}

@function getColorValue( $name ) {
  @return #{nth(map-get($colors,$name),1)}
}

@function getColorBrandName( $name ) {
  @return #{nth(map-get($colors,$name),2)}
}



@function invertColor ($colorName) {
  @return var(--color-#{nth(map-get($colors,$colorName),3)})
}

@function fadeColor ($colorName) {
  $name: map-get($fade-colors,$colorName);
  @return getColor($name);
}

// Brand Color
$colors-brand: (
  'background', 'main', 'accent'
);

// Brand Color Functionnal
$colors-brand-functionnal: (
  'background', 'main', 'accent', 'info', 'success', 'error', 'warning', 'neutral'
);

$colors-feedback: (
  'success', 'error', 'warning', 'info'
);
