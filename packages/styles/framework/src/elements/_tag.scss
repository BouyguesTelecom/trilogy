@use "../base/color";
@use "../utilities/derived-variables";
@use "../utilities/initial-variables";
@use "../utilities/mixins";
@use "../utilities/spacing";

$tag-delete-margin: 1px !default;

// container pour multi-tags ou tags avec actions
.tags {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  flex-wrap: wrap;
  gap: spacing.$spacing-3;
  // multi-tags : ajout d'une marge à droite de chaque tag

  // centrage des tags
  &.is-centered {
    justify-content: center;
  }

  // tags avec actions
  &.has-addons {
    cursor: pointer;

    .tag {

      &:not(:first-child) {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
      }

      &:not(:last-child) {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
      }

      &:first-child {
        padding-right: 5px;
      }

      + .tag {
        padding: 0;
        position: relative;
        width: 25px;
        border-width: 0;

        // fixme : cette règle ne devrait-elle pas s'appliquer à TOUS les buttons ?
        cursor: inherit;

        // affichage d'une fausse croix avec 2 traits penchés
        &:empty {
          &::before,
          &::after {
            position: absolute;
            content: '';
            height: 10px;
            width: 2px;
            background-color: currentColor;
            top: 50%;
            left: 30%;
          }

          &::before {
            transform: translate(50%, -50%) rotate(45deg);
          }

          &::after {
            transform: translate(50%, -50%) rotate(-45deg);
          }
        }
      }
    }

    &.is-inverted {
      .tag {
        background-color: color.getColor('background');
      }
    }

  }
}

.tag {
  align-items: center;
  background-color: color.getColor('neutral-fade');
  border-radius: 9999px;
  color: color.getColor('font');
  display: inline-flex;
  font-size: derived-variables.$size-medium;
  font-weight: initial-variables.$weight-medium;
  height: 28px;
  justify-content: center;
  line-height: 20px;
  padding: spacing.$spacing-1 spacing.$spacing-2;
  white-space: nowrap;

  &.is-small {
    font-size: initial-variables.$text-12;
    line-height: 15px;
    height: 23px;
  }


  @include mixins.mobile {
    font-size: 12px;
    line-height: 15px;
  }

  @each $name in derived-variables.$colors-feedback {
    &.is-#{$name}:not(.is-inverted) {
      background-color: color.fadeColor($name);
    }
    &.is-inverted.is-#{$name} {
      color: color.getColor($name);
      background-color: color.invertColor($name);
    }
  }
}
