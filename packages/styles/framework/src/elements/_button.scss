@use "sass:list";
@use "../base/color";
@use "../theming/buttons_partial";
@use "../utilities/controls";
@use "../utilities/initial-variables";
@use "../utilities/mixins";
@use "../utilities/spacing";

$button-border-width: 2px !default;

.buttons {
  width: 100%;
  column-gap: 16px;

  &.is-vertical {
    row-gap: 16px;
  }

  @include mixins.tablet {
    display: flex;
    align-items: center;
    width: auto;
  }

  &.is-centered,
  &.has-text-centered,
  .has-text-centered & {
    justify-content: center;
  }
}

.button {
  background-color: white;
  border-width: $button-border-width;
  border-radius: var(--radius-small);
  cursor: pointer;
  justify-content: center;
  text-align: center;
  white-space: nowrap;
  padding: 0 spacing.$spacing-4;
  text-decoration: inherit;
  font-weight: initial-variables.$weight-semibold;

  @include controls.control;
  @include mixins.unselectable;
  @extend %buttons-states;

  @include mixins.mobile {
    width: 100%;
    margin: 8px 0 !important;
  }

  @each $name, $pair in buttons_partial.$button-colors {
    $variantName: list.nth($pair, 1);
    $colorBG: color.getColor(#{list.nth($pair, 2)});
    $colorText: color.getColor(list.nth($pair, 3));

    &.is-#{$variantName} {
      background-color: $colorBG;
      color: $colorText;
    }
  }

  &.is-ghost:hover:not([disabled]) {
    background-color: var(--color-main-fade);
    filter: none !important;
  }

  &[disabled],
  &[aria-disabled=true] {
    border-color: transparent !important;
    background-color: color.getColorValue('main-fade') !important;
    color: color.getColorValue('disabled') !important
  }

  &.is-loading {
    background-color: color.getColorValue('neutral');
  }

}
