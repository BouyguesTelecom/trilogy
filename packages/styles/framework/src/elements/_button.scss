$button-border-width: 2px !default;
$button-padding-vertical: calc(0.375em - #{$button-border-width}) !default;

$button-disabled-shadow: none !default;
$button-disabled-opacity: 1 !default;

$is-check-button-icon-pos-left: 5px;

.buttons {
  width: 100%;
  column-gap: 16px;

  &.is-vertical {
    row-gap: 16px;
  }

  @include tablet {
    display: flex;
    align-items: center;
    width: auto;
  }

  &.is-centered,
  &.has-text-centered,
  .has-text-centered & {
    justify-content: center;
  }

  &.is-mobile {
    flex-wrap: wrap;

    .button {
      margin-bottom: 16px;
    }
  }
}

.button {
  @include control;
  @include unselectable;

  background-color: white;
  border-width: $button-border-width;
  border-radius: 4px;
  cursor: pointer;
  justify-content: center;
  text-align: center;
  font-family: $body-family;
  white-space: nowrap;
  height: 44px;
  padding: 0 $spacing-4;
  font-size: $text-15;
  text-decoration: inherit;
  font-weight: $weight-semibold;

  @include mobile {
    width: 100%;
    margin: 8px 0 !important;
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;

    &::after {
      @include spinner;
      @include center(1em);

      position: absolute !important;
    }
  }

  @each $name, $pair in $btn-colors {
    $color: nth($pair, 1);
    $invColor: nth($pair, 3);

    &.is-#{$color} {
      background-color: nth($pair, 2);
      color: nth($pair, 3);

      .icon.is-#{$color} {
        color: nth($pair, 3);
      }
    }

    &:focus-within {
      outline: 2px solid getColor('main');
      outline-offset: 2px;
    }

    &:hover.is-#{$color} {
      background-color: nth($pair, 4);
      color: nth($pair, 3);
    }

    &:active.is-#{$color} {
      background-color: nth($pair, 5);
      color: invertColor($color);
    }

    &[class*='is-'] {
      &[disabled] {
        @extend %disabled;

        background-color: getColor('bg-disabled');
        border-color: transparent;
        box-shadow: none;
        color: getColor('grey-dark');

      }
    }
  }

  %disabled {
    background-color: getColor('bg-disabled');
    color: getColor('disabled');
    box-shadow: $button-disabled-shadow;
    opacity: $button-disabled-opacity;

    &:hover {
      color: getColor('grey-dark');
    }
  }

}
