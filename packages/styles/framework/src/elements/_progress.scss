@use "sass:math";

@import "../base/color";

$progressbar-height: 10px;
$progressbar-small: 5px;

.progress {
  @include block;

  border: none;
  border-radius: 9999px;
  display: block;
  height: $progressbar-height;
  overflow: hidden;
  padding: 0;
  width: 100%;
  -moz-appearance: none;
  -webkit-appearance: none;

  background-color: getFadeColor('neutral');

  &::-webkit-progress-bar {
    background-color: getFadeColor('font');
    border-radius: $progressbar-height;
  }

  &::-webkit-progress-value {
    background-color: getColor('font');
    border-radius: $progressbar-height;
  }

  &::-moz-progress-bar {
    background-color: getColor('font');
    border-radius: $progressbar-height;
  }

  &:not(:last-child) {
    margin-bottom: 7.5px;
  }

  // Colors
  @each $name in $colors-brand-funcionnal {
    $brandName: getColorBrandName($name);
    $color: getColor($name);

    &.is-#{$brandName} {
      &::-webkit-progress-value {
        background-color: $color;
      }

      &::-moz-progress-bar {
        background-color: $color;
      }

      &::-ms-fill {
        background-color: $color;
      }
    }
  }

  // Sizes
  &.is-small {
    height: $progressbar-small;
  }
}

.progress.is-stacked {
  display: flex;
  border-radius: $progressbar-height;

  .progress-bar {
    height: $progressbar-height;
    background-color: getColor('font');

    &:first-child {
      border-radius: $progressbar-height 0 0 $progressbar-height;
    }

    &:last-child {
      border-radius: 0 $progressbar-height $progressbar-height 0;
    }

    @each $name in $colors-brand-funcionnal {
      $color: getColor($name);
      $color-invert: invertColor($name);
      $brandName: getColorBrandName($name);

      &.is-#{$brandName} {
        background-color: $color;
      }
    }
  }
}

// Progress Bar circle
$progress-circle-slices: (
  secondary: getColor('info'),
  tertiary: getColor('font'),
  warning: getColor('warning'),
  empty: getFadeColor('neutral')
);

.progress-circle {
  --progress-circle-size: 140px;
  --progress-circle-border-width: 8px;
  --progress-circle-spacing: 0;
  --progress-circle-spacing-color: 255, 255, 255;
  --progress-circle-spacing-deg: calc(1deg * var(--progress-circle-spacing));

  border-radius: 9999px;
  height: var(--progress-circle-size);
  margin: 40px;
  position: relative;
  width: var(--progress-circle-size);
}

.progress-circle-content {
  left: 50%;
  line-height: 1.5;
  position: absolute;
  text-align: center;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 80%;
}

.progress-circle-title {
  color: rgba(getColor('font'), 0.7);
  font-size: 28px;
  font-weight: $weight-semibold;
}

.progress-circle-sub {
  color: getColor('font');
  font-size: 15px;
  font-weight: $weight-semibold;
  letter-spacing: 0.05em;
}

.progress-circle-slice {
  height: 100%;
  position: absolute;
  width: 100%;
}

.progress-circle-slice::before,
.progress-circle-slice::after {
  border: var(--progress-circle-border-width) solid rgba(0, 0, 0, 0);
  border-radius: 9999px;
  content: '';
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  transform: rotate(45deg);
  width: 100%;
}

.progress-circle-slice::before {
  border-width: calc(var(--progress-circle-border-width) + 1px);
  box-shadow: 0 0 1px 0 #{'rgba(var(--progress-circle-spacing-color), calc(100 * var(--progress-circle-spacing)))'};
}

$slides-concat: '';

@each $slice in $progress-circle-slices {
  $name: nth($slice, 1);
  $color: nth($slice, 2);
  $i: index($progress-circle-slices, $slice);

  @if $i > 1 {
    .progress-circle-background-#{$name} {
      --#{$name}-start: calc(#{$slides-concat});
      --#{$name}-check: max(calc(var(--#{$name}-start) - .5), 0);

      clip-path: inset(0 calc(50% * (var(--#{$name}-check) / var(--#{$name}-check))) 0 0);
    }
  } @else {
    .progress-circle-background-#{$name} {
      --#{$name}-start: 0;
    }
  }

  .progress-circle-background-#{$name}::before {
    border-top-color: #{'rgba(var(--progress-circle-spacing-color), calc(100 * var(--progress-circle-spacing)))'};
    transform: rotate(calc(360deg * var(--#{$name}-start) + 45deg));
  }

  .progress-circle-background-#{$name}::after {
    border-top-color: rgba($color, 1);
    border-right-color: rgba($color, calc(100 * (var(--#{$name}) - .25)));
    border-bottom-color: rgba($color, calc(100 * (var(--#{$name}) - .5)));
    border-left-color: rgba($color, calc(100 * (var(--#{$name}) - .75)));
    transform: rotate(calc(360deg * var(--#{$name}-start) + 45deg + var(--progress-circle-spacing-deg)));
  }

  @if $i == 1 {
    $slides-concat: var(--#{$name});
  } @else {
    $slides-concat: $slides-concat + ' + ' + var(--#{$name});
  }
}
